// Problem 29

// Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

//     22=4, 23=8, 24=16, 25=32
//     32=9, 33=27, 34=81, 35=243
//     42=16, 43=64, 44=256, 45=1024
//     52=25, 53=125, 54=625, 55=3125

// If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

// 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

// How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

getDistinctPowers(100);

function getDistinctPowers(max) {
  var results = [];
  for (var a = 2; a <= max; a++) {
    for (var b = 2; b <= max; b++) {
      var num = createFromNumber(a);
      var result = createFromNumber(a);

      for (var i = 1; i < b; i++) {
        result = digitArrayMultiply(result, num);
      }

      results.push(result);
    }
  }

  results.sort();

  for (var i = 0, result; (result = results[i]); i++) {
    while (equals(result, results[i + 1])) {
      results.splice(i + 1, 1);
    }
  }

  console.log(
    `The distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100 are ${results.length}`
  );
}

function createFromNumber(number) {
  var bigNum = [number];
  rebalanceDigitArray(bigNum);
  return bigNum;
}

function rebalanceDigitArray(digits, index) {
  index = index || 0;
  var digit = digits[index];
  while (digit > 9) {
    digits[index] = digit % 10;

    index++;
    digits[index] = digit = (digits[index] || 0) + (digit - (digit % 10)) / 10;
  }
}

function digitArrayMultiply(digits1, digits2) {
  var productDigits = [];
  for (var i = 0; i < digits1.length; i++) {
    digit1 = digits1[i];
    for (var j = 0; j < digits2.length; j++) {
      digit2 = digits2[j];
      var product = digit1 * digit2;
      var productIndex = i + j;

      productDigits[productIndex] =
        (productDigits[productIndex] || 0) + product;
      rebalanceDigitArray(productDigits, productIndex);
    }
  }

  return productDigits;
}

function equals(num1, num2) {
  if (!num1 || !num2 || num1.length != num2.length) {
    return false;
  }

  for (var i = 0; i < num1.length; i++) {
    if (num1[i] != num2[i]) {
      return false;
    }
  }
  return true;
}
